module Dictionary
  def english_to_braille(incoming_text)
         letter_hash = {"a" => { 1 => "O. ",
                                 2 => ".. ",
                                 3 => ".. " },
                        "b" => { 1 => "O. ",
                                 2 => "O. ",
                                 3 => ".. " },
                        "c" => { 1 => "OO ",
                                 2 => ".. ",
                                 3 => ".. " },
                        "d" => { 1 => "OO ",
                                 2 => ".O ",
                                 3 => ".. " },
                        "e" => { 1 => "O. ",
                                 2 => ".O ",
                                 3 => ".. " },
                        "f" => { 1 => "OO ",
                                 2 => "O. ",
                                 3 => ".. " },
                        "g" => { 1 => "OO ",
                                 2 => "OO ",
                                 3 => ".. " },
                        "h" => { 1 => "O. ",
                                 2 => "OO ",
                                 3 => ".. " },
                        "i" => { 1 => ".O ",
                                 2 => "O. ",
                                 3 => ".. " },
                        "j" => { 1 => ".O ",
                                 2 => "OO ",
                                 3 => ".. " },
                        "k" => { 1 => "O. ",
                                 2 => ".. ",
                                 3 => "O. " },
                        "l" => { 1 => "O. ",
                                 2 => "O. ",
                                 3 => "O. " },
                        "m" => { 1 => "OO ",
                                 2 => ".. ",
                                 3 => "O. " },
                        "n" => { 1 => "OO ",
                                 2 => ".O ",
                                 3 => "O. " },
                        "o" => { 1 => "O. ",
                                 2 => ".O ",
                                 3 => "O. " },
                        "p" => { 1 => "OO ",
                                 2 => "O. ",
                                 3 => "O. " },
                        "q" => { 1 => "OO ",
                                 2 => "OO ",
                                 3 => "O. " },
                        "r" => { 1 => "O. ",
                                 2 => "OO ",
                                 3 => "O. " },
                        "s" => { 1 => ".O ",
                                 2 => "O. ",
                                 3 => "O. " },
                        "t" => { 1 => ".O ",
                                 2 => "OO ",
                                 3 => "O. " },
                        "u" => { 1 => "O. ",
                                 2 => ".. ",
                                 3 => "OO " },
                        "v" => { 1 => "O. ",
                                 2 => "O. ",
                                 3 => "OO " },
                        "w" => { 1 => ".O ",
                                 2 => "OO ",
                                 3 => ".O " },
                        "x" => { 1 => "OO ",
                                 2 => ".. ",
                                 3 => "OO " },
                        "y" => { 1 => "OO ",
                                 2 => ".O ",
                                 3 => "OO " },
                        "z" => { 1 => "O. ",
                                 2 => ".O ",
                                 3 => "OO " },
                        " " => { 1 => "   ",
                                 2 => "   ",
                                 3 => "   " },
                  }
    new_text = ""
    incoming_text.each_char {|char| new_text.concat(letter_hash.values_at(char)[0][1]) }
    new_text.concat("\n")
    incoming_text.each_char {|char| new_text.concat(letter_hash.values_at(char)[0][2]) }
    new_text.concat("\n")
    incoming_text.each_char {|char| new_text.concat(letter_hash.values_at(char)[0][3]) }
    new_text
  end
end
